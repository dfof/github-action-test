name: CI

on:
  push:
  schedule:
    - cron: '0 21 * * sun'

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        playbook: [applications-logs, no-logs]
        config:
          - distribution: centos-8
          - distribution: centos-7
          - distribution: centos-6
          - distribution: fedora-32
          - distribution: fedora-31
          - distribution: fedora-30
          - distribution: fedora-29
          - distribution: fedora-28
          - distribution: fedora-27
          - distribution: fedora-26
          - distribution: ubuntu-20.04
          - distribution: ubuntu-18.04
          - distribution: ubuntu-16.04
          - distribution: ubuntu-14.04
          - distribution: ubuntu-12.04
          - distribution: debian-10
          - distribution: debian-9
          - distribution: debian-8
          - distribution: oraclelinux-8
          - distribution: oraclelinux-7
          - distribution: oraclelinux-6
          - distribution: amazonlinux-2
          - distribution: amazonlinux-1
          - distribution: opensuse-15
          - distribution: opensuse-42.3
          - distribution: opensuse-13.2
          - distribution: archlinux-rolling
          - distribution: clearlinux-rolling

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Install Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Test Ansible role Java
      run: |
        container_id=$(mktemp)

        # Run container and mount ansible role with it
        sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/ansible-role-java:ro diodonfrost/${{ matrix.config.distribution }}-ansible:latest > "${container_id}"

        # Check syntax
        sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-java/tests/playbooks/${{ matrix.playbook }}.yml --syntax-check

        # Run ansible playbook
        sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-java/tests/playbooks/${{ matrix.playbook }}.yml

        # Test indempotence
        sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-java/tests/playbooks/${{ matrix.playbook }}.yml \
        | grep -q 'changed=0.*failed=0' \
        && (echo 'Idempotence test: pass' && exit 0) \
        || (echo 'Idempotence test: fail' && exit 1)

        # Test role
        inspec exec tests/inspec --chef-license accept-silent -t docker://$(cat ${container_id})

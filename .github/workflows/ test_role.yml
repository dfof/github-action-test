name: CI

on:
  push:
  schedule:
    - cron: '0 18 * * sun'

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        playbook: [applications-logs, no-logs]
        distribution:
          - centos-8
          - centos-7
          - centos-6
          - fedora-32
          - fedora-31
          - fedora-30
          - fedora-29
          - fedora-28
          - fedora-27
          - fedora-26
          - ubuntu-20.04
          - ubuntu-18.04
          - ubuntu-16.04
          - ubuntu-14.04
          - ubuntu-12.04
          - debian-10
          - debian-9
          - debian-8
          - oraclelinux-8
          - oraclelinux-7
          - oraclelinux-6
          - amazonlinux-2
          - amazonlinux-1
          - opensuse-15
          - opensuse-42.3
          - opensuse-13.2
          - archlinux-rolling
          - clearlinux-rolling

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Install Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Test Ansible role Logrotate
      run: |
        container_id=$(mktemp)

        # Run container and mount ansible role with it
        sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/ansible-role-logrotate:ro diodonfrost/${{ matrix.distribution }}-ansible:latest > "${container_id}"

        # Check syntax
        sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-logrotate/tests/playbooks/${{ matrix.playbook }}.yml --syntax-check

        # Run ansible playbook
        sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-logrotate/tests/playbooks/${{ matrix.playbook }}.yml

        # Test indempotence
        sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/ansible-role-logrotate/tests/playbooks/${{ matrix.playbook }}.yml \
        | grep -q 'changed=0.*failed=0' \
        && (echo 'Idempotence test: pass' && exit 0) \
        || (echo 'Idempotence test: fail' && exit 1)

        # Test role
        inspec exec tests/inspec --chef-license accept-silent -t docker://$(cat ${container_id})
